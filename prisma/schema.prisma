// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Agent {
  @@map(name: "agents")
  id    String     @id @default(uuid())
  email String  @unique
  phone String 
  firstName  String
  lastName  String?
  gender String @default("")
  address String ?
  avatar String  @default("")
  state String  @default("")
  localGovt String @default("")
  maritalStatus String ? @default("")
  verified Boolean? @default(false) 

  password String 
  role RoleEnumType @default(AGENT)

  verificationCode String? @db.Text @unique

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt @default(now())

  provider String?
  passwordResetToken String?
  passwordResetAt DateTime?

  prosperityHub ProsperityHub[]
  warhouse Warehouse[]

  @@unique([email, verificationCode, passwordResetToken])
  @@index([email, verificationCode, passwordResetToken])
}

enum RoleEnumType {
  AGENT
  ADMIN
}

model ProsperityHub {
  @@map(name: "prosperityHubs")
  id        String     @id @default(uuid())
  name     String @unique
  address   String?
  state     String  @default("")
  localGovt  String @default("")
  remarks   String?
  status   Boolean @default(false)
  agent   Agent   @relation(fields: [agentId], onDelete: Cascade, references: [id])
  agentId   String

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt @default(now())
}
model Warehouse {
  @@map(name: "warehouses")
  id        String     @id @default(uuid())
  name     String @unique
  state String @default("")
  localGovt String @default("")
  address     String
  remarks     String?
  status Boolean @default(false)
  agent   Agent   @relation(fields: [agentId], onDelete: Cascade, references: [id])
  agentId String

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt @default(now())
}